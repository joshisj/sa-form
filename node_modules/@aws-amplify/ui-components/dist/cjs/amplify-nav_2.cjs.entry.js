'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-e8ee84fd.js');
const core = require('@aws-amplify/core');
const authTypes = require('./auth-types-cd1f71d2.js');
const Translations = require('./Translations-7087b270.js');
const constants = require('./constants-3aa9204f.js');
const helpers = require('./helpers-42d9c350.js');
const auth = require('@aws-amplify/auth');

const amplifyNavCss = ".nav{display:-ms-flexbox;display:flex;-ms-flex:1 1 0%;flex:1 1 0%;-ms-flex-pack:end;justify-content:flex-end;-ms-flex-align:center;align-items:center}.nav>*{margin:0 0.5em}";

const AmplifyNav = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
    }
    render() {
        return (index.h("nav", { class: "nav" }, index.h("slot", null)));
    }
};
AmplifyNav.style = amplifyNavCss;

const AmplifySignOut = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
        /** Auth state change handler for this component */
        this.handleAuthStateChange = helpers.dispatchAuthStateChangeEvent;
        /** Text inside of the Sign Out button */
        this.buttonText = core.I18n.get(Translations.Translations.SIGN_OUT);
    }
    async signOut(event) {
        if (event)
            event.preventDefault();
        // TODO: Federated Sign Out
        if (!auth.Auth || typeof auth.Auth.signOut !== 'function') {
            throw new Error(constants.NO_AUTH_MODULE_FOUND);
        }
        try {
            await auth.Auth.signOut();
            this.handleAuthStateChange(authTypes.AuthState.SignedOut);
        }
        catch (error) {
            helpers.dispatchToastHubEvent(error);
        }
    }
    render() {
        return (index.h("amplify-button", { slot: "sign-out", onClick: event => this.signOut(event), "data-test": "sign-out-button" }, this.buttonText));
    }
};

exports.amplify_nav = AmplifyNav;
exports.amplify_sign_out = AmplifySignOut;
