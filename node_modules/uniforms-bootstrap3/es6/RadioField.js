import React from 'react';
import classnames from 'classnames';
import { connectField } from 'uniforms';
import wrapField from './wrapField';
const base64 = typeof btoa !== 'undefined'
    ? btoa
    : (x) => Buffer.from(x).toString('base64');
const escape = (x) => base64(x).replace(/=+$/, '');
const Radio = props => wrapField(props, props.allowedValues.map(item => (React.createElement("div", { key: item, className: classnames(props.inputClassName, `radio${props.inline ? '-inline' : ''}`) },
    React.createElement("label", { htmlFor: `${props.id}-${escape(item)}` },
        React.createElement("input", { checked: item === props.value, disabled: props.disabled, id: `${props.id}-${escape(item)}`, name: props.name, onChange: () => props.onChange(item), type: "radio" }),
        props.transform ? props.transform(item) : item)))));
export default connectField(Radio);
