import { __rest } from "tslib";
import React from 'react';
import classnames from 'classnames';
import { connectField } from 'uniforms';
import wrapField from './wrapField';
const Bool = (_a) => {
    var { label, labelBefore } = _a, props = __rest(_a, ["label", "labelBefore"]);
    return wrapField(Object.assign({ label: labelBefore }, props), React.createElement("div", { className: classnames(props.inputClassName, `checkbox${props.inline ? '-inline' : ''}`) },
        React.createElement("label", { htmlFor: props.id },
            React.createElement("input", { checked: props.value, disabled: props.disabled, id: props.id, name: props.name, onChange: () => props.onChange(!props.value), ref: props.inputRef, type: "checkbox" }),
            "\u00A0",
            label)));
};
export default connectField(Bool);
