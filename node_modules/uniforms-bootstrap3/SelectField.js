"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importDefault(require("react"));
var classnames_1 = tslib_1.__importDefault(require("classnames"));
var uniforms_1 = require("uniforms");
var wrapField_1 = tslib_1.__importDefault(require("./wrapField"));
var base64 = typeof btoa !== 'undefined'
    ? btoa
    : function (x) { return Buffer.from(x).toString('base64'); };
var escape = function (x) { return base64(x).replace(/=+$/, ''); };
var xor = function (item, array) {
    var index = array.indexOf(item);
    if (index === -1) {
        return array.concat([item]);
    }
    return array.slice(0, index).concat(array.slice(index + 1));
};
var renderCheckboxes = function (props) {
    return props.allowedValues.map(function (item) { return (react_1.default.createElement("div", { key: item, className: classnames_1.default(props.inputClassName, "checkbox" + (props.inline ? '-inline' : '')) },
        react_1.default.createElement("label", { htmlFor: props.id + "-" + escape(item) },
            react_1.default.createElement("input", { checked: props.fieldType === Array
                    ? props.value.includes(item)
                    : props.value === item, disabled: props.disabled, id: props.id + "-" + escape(item), name: props.name, onChange: function () {
                    return props.onChange(props.fieldType === Array ? xor(item, props.value) : item);
                }, type: "checkbox" }),
            props.transform ? props.transform(item) : item))); });
};
var renderSelect = function (props) { return (react_1.default.createElement("select", { className: classnames_1.default(props.inputClassName, 'form-control', {
        'form-control-danger': props.error,
    }), disabled: props.disabled, id: props.id, name: props.name, onChange: function (event) {
        return props.onChange(event.target.value !== '' ? event.target.value : undefined);
    }, ref: props.inputRef, value: props.value },
    (!!props.placeholder || !props.required || props.value === '') && (react_1.default.createElement("option", { value: "", disabled: props.required, hidden: props.required }, props.placeholder || props.label)),
    props.allowedValues.map(function (value) { return (react_1.default.createElement("option", { key: value, value: value }, props.transform ? props.transform(value) : value)); }))); };
var Select = function (props) {
    return wrapField_1.default(props, props.checkboxes || props.fieldType === Array
        ? renderCheckboxes(props)
        : renderSelect(props));
};
exports.default = uniforms_1.connectField(Select);
