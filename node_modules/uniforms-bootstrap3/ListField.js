"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importStar(require("react"));
var classnames_1 = tslib_1.__importDefault(require("classnames"));
var uniforms_1 = require("uniforms");
var ListItemField_1 = tslib_1.__importDefault(require("./ListItemField"));
var ListAddField_1 = tslib_1.__importDefault(require("./ListAddField"));
var List = function (_a) {
    var addIcon = _a.addIcon, children = _a.children, className = _a.className, error = _a.error, errorMessage = _a.errorMessage, initialCount = _a.initialCount, itemProps = _a.itemProps, label = _a.label, name = _a.name, removeIcon = _a.removeIcon, showInlineError = _a.showInlineError, value = _a.value, props = tslib_1.__rest(_a, ["addIcon", "children", "className", "error", "errorMessage", "initialCount", "itemProps", "label", "name", "removeIcon", "showInlineError", "value"]);
    return (react_1.default.createElement("div", tslib_1.__assign({ className: classnames_1.default('panel panel-default', { 'panel-danger': error }, className) }, uniforms_1.filterDOMProps(props)),
        react_1.default.createElement("div", { className: "panel-body" },
            label && (react_1.default.createElement("div", { className: classnames_1.default('panel-heading', { 'has-error': error }) },
                react_1.default.createElement("label", { className: "control-label" },
                    label,
                    "\u00A0"),
                react_1.default.createElement(ListAddField_1.default, { name: name + ".$", initialCount: initialCount, addIcon: addIcon }),
                !!(error && showInlineError) && (react_1.default.createElement("span", { className: "help-block" }, errorMessage)))),
            children
                ? value.map(function (item, index) {
                    return react_1.Children.map(children, function (child) {
                        return react_1.default.cloneElement(child, {
                            key: index,
                            label: null,
                            name: uniforms_1.joinName(name, child.props.name && child.props.name.replace('$', index)),
                            removeIcon: removeIcon,
                        });
                    });
                })
                : value.map(function (item, index) { return (react_1.default.createElement(ListItemField_1.default, tslib_1.__assign({ key: index, label: null, name: uniforms_1.joinName(name, index), removeIcon: removeIcon }, itemProps))); }))));
};
exports.default = uniforms_1.connectField(List, {
    ensureValue: false,
    includeInChain: false,
});
