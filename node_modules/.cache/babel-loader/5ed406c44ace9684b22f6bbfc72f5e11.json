{"ast":null,"code":"var _jsxFileName = \"/Users/rjgleave/mysrc/oneq-work/sa-form/src/myRequestForm.js\";\nimport React from 'react';\nimport { Storage } from 'aws-amplify';\nimport { v4 as uuidv4 } from 'uuid';\nimport { AutoField, AutoForm, ErrorField, DateField, RadioField, SubmitField } from 'uniforms-semantic';\nimport RequestSchema from './SaRequestSchema';\nconst style = {\n  margin: 200\n}; // Get the query parameters and default them into the form\n\nlet search = window.location.search;\nlet params = new URLSearchParams(search); // Salesforce account \n\nlet account = params.get('account');\nlet name = params.get('name');\nconsole.log(name); // generate unique request# and file name for S3\n\nvar requestID = uuidv4();\nvar s3fileName = 'sa-requests/request-' + requestID + '.json';\nconsole.log('Request ID:', requestID);\nconsole.log('File Name:', s3fileName);\n\nvar handleAdd = doc => {\n  console.log(\"Here is the document\", doc); // Just using a placeholder user id since there is no login currently\n\n  const post = {\n    accountID: doc.accountID,\n    accountName: doc.accountName,\n    activityInfo: doc.activityInfo\n  };\n  console.log(post); //api.posts.createPost({ post: post}).then(json => displayMessage(json))\n  // save the form data to S3 cloud Storage\n\n  var addToStorage = () => {\n    Storage.put(s3fileName, doc).then(result => {\n      console.log('result: ', result);\n    }).catch(err => console.log('error: ', err));\n  };\n\n  addToStorage();\n};\n\nexport default function RequestForm() {\n  return /*#__PURE__*/React.createElement(AutoForm, {\n    style: style,\n    schema: RequestSchema,\n    onSubmit: doc => handleAdd(doc),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"SA Activity/Support Request\"), /*#__PURE__*/React.createElement(AutoField, {\n    name: \"accountID\",\n    value: account,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ErrorField, {\n    name: \"accountID\",\n    errorMessage: \"Account ID is required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AutoField, {\n    name: \"accountName\",\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ErrorField, {\n    name: \"accountName\",\n    errorMessage: \"Account name is required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"Activity Details\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(DateField, {\n    name: \"activityDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AutoField, {\n    name: \"activityType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AutoField, {\n    name: \"activityInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(RadioField, {\n    name: \"activityLocation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SubmitField, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/rjgleave/mysrc/oneq-work/sa-form/src/myRequestForm.js"],"names":["React","Storage","v4","uuidv4","AutoField","AutoForm","ErrorField","DateField","RadioField","SubmitField","RequestSchema","style","margin","search","window","location","params","URLSearchParams","account","get","name","console","log","requestID","s3fileName","handleAdd","doc","post","accountID","accountName","activityInfo","addToStorage","put","then","result","catch","err","RequestForm"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Storage } from 'aws-amplify'\nimport { v4 as uuidv4 } from 'uuid';\n\n\nimport {\n  AutoField,\n  AutoForm,\n  ErrorField,\n  DateField,\n  RadioField,\n  SubmitField\n} from 'uniforms-semantic';\n\nimport RequestSchema from './SaRequestSchema';\n\nconst style = {\n  margin: 200,\n};\n\n// Get the query parameters and default them into the form\nlet search = window.location.search;\nlet params = new URLSearchParams(search);\n// Salesforce account \nlet account = params.get('account');\nlet name = params.get('name');\nconsole.log(name);\n\n// generate unique request# and file name for S3\nvar requestID = uuidv4();\nvar s3fileName = 'sa-requests/request-' + requestID + '.json' \nconsole.log('Request ID:', requestID)\nconsole.log('File Name:', s3fileName);\n\n\nvar handleAdd = (doc) => {\n  console.log(\"Here is the document\",doc)\n  // Just using a placeholder user id since there is no login currently\n  const post = {accountID: doc.accountID, accountName: doc.accountName, activityInfo: doc.activityInfo}\n  console.log(post)\n  //api.posts.createPost({ post: post}).then(json => displayMessage(json))\n\n  // save the form data to S3 cloud Storage\n  var addToStorage = () => {\n    Storage.put(s3fileName, doc)\n      .then (result => {\n        console.log('result: ', result)\n      })\n      .catch(err => console.log('error: ', err));\n  }\n  addToStorage();\n}\n\n\nexport default function RequestForm() {\n\n  return (\n    <AutoForm style={style} schema={RequestSchema} onSubmit={doc => handleAdd(doc)}>\n      <h2>SA Activity/Support Request</h2>\n      <AutoField name=\"accountID\" value={account}/>\n      <ErrorField\n        name=\"accountID\"\n        errorMessage=\"Account ID is required\"\n      />\n      <AutoField name=\"accountName\" value={name}/>\n      <ErrorField\n        name=\"accountName\"\n        errorMessage=\"Account name is required\"\n      />\n      <h3>Activity Details</h3>\n      <span></span>\n      <DateField name=\"activityDate\" />\n      <AutoField name=\"activityType\" />\n      <AutoField name=\"activityInfo\" />\n      <RadioField name=\"activityLocation\" />\n      <SubmitField />\n    </AutoForm>\n  );\n}"]},"metadata":{},"sourceType":"module"}