{"ast":null,"code":"import Ajv from 'ajv';\nimport SimpleSchema from 'simpl-schema';\nimport SimpleSchema2Bridge from 'uniforms-bridge-simple-schema-2'; // NOTE:  Uniforms tutorial omitted this line below, needed to compile\n\nimport { LongTextField, DateField } from 'uniforms-semantic';\nconst formValues = {\n  activityTypes: ['Meeting / Office Hours [Management]', 'Service Deep Dive [Workshops]', 'AOD/SME/Specialist [Thought Leadership]', 'Architecture Review [Architecture]', 'Immersion Day [Workshops]'],\n  activityTopics: ['Analytics', 'Application Development', 'Athena', 'Cloudendure Migration', 'Immersion Day [Workshops]'],\n  activityDomains: ['Blockchain', 'Compute/HPC', 'Containers', 'AI/ML'],\n  activityComplexity: ['100: Introductory and overview engagement', '200: Intermediate engagement; requires specific details about the topic', '300: Advanced material; requires in-depth understanding of features in a real-world environment', '400: Expert engagement; requires expert-to-expert interaction and coverage of specialized topics'],\n  activityInteractionType: ['Virtual Meeting', 'Onsite Meeting', 'Email'],\n  routeToGroup: ['Account SA Team for this customer', 'Central SA', 'Specialists (Specreq)']\n};\nconst simpleRequestSchema = new SimpleSchema({\n  accountLink: {\n    label: 'Salesforce Account Link',\n    type: String\n  },\n  accountName: {\n    label: 'Account Name',\n    type: String\n  },\n  accountOpportunity: {\n    label: 'Salesforce Opportunity Link',\n    type: String\n  },\n  activityTitle: {\n    label: 'Activity Title',\n    type: String\n  },\n  activityType: {\n    label: 'Activity Type',\n    type: String,\n    allowedValues: formValues.activityTypes\n  },\n  activityTopic: {\n    label: 'Topic',\n    type: String,\n    allowedValues: formValues.activityTopics\n  },\n  activityDomain: {\n    label: 'Domain',\n    type: String,\n    allowedValues: formValues.activityDomains\n  },\n  activityComplexity: {\n    label: 'Complexity',\n    type: String,\n    allowedValues: formValues.activityComplexity\n  },\n  activityDetails: {\n    label: 'Activity Details',\n    type: String,\n    optional: true,\n    defaultValue: ''\n  },\n  activityFromDate: {\n    label: 'Date Range From:',\n    type: Date,\n    defaultValue: new Date()\n  },\n  activityToDate: {\n    label: 'Date Range To:',\n    type: Date,\n    defaultValue: new Date()\n  },\n  activityLocation: {\n    label: 'Activity Location',\n    type: String\n  },\n  activityInteractionType: {\n    label: 'Route To Group',\n    type: String,\n    allowedValues: formValues.routeToGroup\n  },\n  activityInteractionType: {\n    label: 'Interaction Type',\n    type: String,\n    allowedValues: formValues.activityInteractionType\n  }\n});\nconst ajv = new Ajv({\n  allErrors: true,\n  useDefaults: true\n});\n\nfunction createValidator(schema) {\n  const validator = ajv.compile(schema);\n  return model => {\n    validator(model);\n\n    if (validator.errors && validator.errors.length) {\n      throw {\n        details: validator.errors\n      };\n    }\n  };\n}\n\nconst schemaValidator = createValidator(simpleRequestSchema);\nconst bridge = new SimpleSchema2Bridge(simpleRequestSchema, schemaValidator);\nexport default bridge;","map":{"version":3,"sources":["/Users/rjgleave/mysrc/oneq-work/sa-form/src/saRequestSchema.js"],"names":["Ajv","SimpleSchema","SimpleSchema2Bridge","LongTextField","DateField","formValues","activityTypes","activityTopics","activityDomains","activityComplexity","activityInteractionType","routeToGroup","simpleRequestSchema","accountLink","label","type","String","accountName","accountOpportunity","activityTitle","activityType","allowedValues","activityTopic","activityDomain","activityDetails","optional","defaultValue","activityFromDate","Date","activityToDate","activityLocation","ajv","allErrors","useDefaults","createValidator","schema","validator","compile","model","errors","length","details","schemaValidator","bridge"],"mappings":"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","sourcesContent":["import Ajv from 'ajv';\nimport SimpleSchema from 'simpl-schema';\nimport SimpleSchema2Bridge from 'uniforms-bridge-simple-schema-2';\n\n// NOTE:  Uniforms tutorial omitted this line below, needed to compile\nimport {LongTextField, DateField} from 'uniforms-semantic';\n\nconst formValues = {\n  activityTypes: [\n    'Meeting / Office Hours [Management]', \n    'Service Deep Dive [Workshops]', \n    'AOD/SME/Specialist [Thought Leadership]', \n    'Architecture Review [Architecture]', \n    'Immersion Day [Workshops]'\n  ],\n  activityTopics: [\n    'Analytics', \n    'Application Development', \n    'Athena', \n    'Cloudendure Migration', \n    'Immersion Day [Workshops]'\n  ],\n  activityDomains: [\n    'Blockchain', \n    'Compute/HPC', \n    'Containers', \n    'AI/ML'\n  ],\n  activityComplexity: [\n    '100: Introductory and overview engagement', \n    '200: Intermediate engagement; requires specific details about the topic', \n    '300: Advanced material; requires in-depth understanding of features in a real-world environment', \n    '400: Expert engagement; requires expert-to-expert interaction and coverage of specialized topics'\n  ],\n  activityInteractionType: [\n    'Virtual Meeting', \n    'Onsite Meeting', \n    'Email'\n  ],\n  routeToGroup: [\n    'Account SA Team for this customer', \n    'Central SA', \n    'Specialists (Specreq)'\n  ],\n\n};\n\nconst simpleRequestSchema = new SimpleSchema({\n  accountLink: { label: 'Salesforce Account Link', type: String },\n  accountName: { label: 'Account Name', type: String },\n  accountOpportunity: { label: 'Salesforce Opportunity Link', type: String },\n  activityTitle: { label: 'Activity Title', type: String },\n  activityType: { label: 'Activity Type', type: String, allowedValues: formValues.activityTypes },\n  activityTopic: { label: 'Topic', type: String, allowedValues: formValues.activityTopics },\n  activityDomain: { label: 'Domain', type: String, allowedValues: formValues.activityDomains },\n  activityComplexity: { label: 'Complexity', type: String, allowedValues: formValues.activityComplexity },\n  activityDetails: { label: 'Activity Details', type: String, optional: true, defaultValue: '' },\n  activityFromDate: { label: 'Date Range From:', type: Date, defaultValue: new Date() },\n  activityToDate: { label: 'Date Range To:', type: Date, defaultValue: new Date() },\n  activityLocation: { label: 'Activity Location', type: String },\n  activityInteractionType: { label: 'Route To Group', type: String, allowedValues: formValues.routeToGroup},\n  activityInteractionType: { label: 'Interaction Type', type: String, allowedValues: formValues.activityInteractionType },\n});\n\n\nconst ajv = new Ajv({ allErrors: true, useDefaults: true });\n\nfunction createValidator(schema) {\n  const validator = ajv.compile(schema);\n\n  return model => {\n    validator(model);\n\n    if (validator.errors && validator.errors.length) {\n      throw { details: validator.errors };\n    }\n  };\n}\n\nconst schemaValidator = createValidator(simpleRequestSchema);\n\nconst bridge = new SimpleSchema2Bridge(simpleRequestSchema, schemaValidator);\n\nexport default bridge;"]},"metadata":{},"sourceType":"module"}