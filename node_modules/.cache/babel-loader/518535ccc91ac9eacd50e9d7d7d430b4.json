{"ast":null,"code":"import Ajv from 'ajv';\nimport { JSONSchemaBridge } from 'uniforms-bridge-json-schema'; // NOTE:  Uniforms tutorial omitted this line below, needed to compile\n\nimport { LongTextField } from 'uniforms-semantic';\nconst schema = {\n  title: 'Request',\n  type: 'object',\n  properties: {\n    accountID: {\n      type: 'string'\n    },\n    accountName: {\n      type: 'string'\n    },\n    activityDate: {\n      format: 'date',\n      type: 'string'\n    },\n    activityType: {\n      type: 'string',\n      options: [{\n        label: 'Meeting / Office Hours [Management]',\n        value: 'Management'\n      }, {\n        label: 'Service Deep Dive [Workshops]',\n        value: 'Workshops'\n      }, {\n        label: 'AOD/SME/Specialist [Thought Leadership]',\n        value: 'Thought Leadership'\n      }, {\n        label: 'Architecture Review [Architecture]',\n        value: 'Architecture'\n      }, {\n        label: 'Immersion Day [Workshops]',\n        value: 'Workshops'\n      }, {\n        label: 'Migration Readiness Assessment [Architecture]',\n        value: 'Architecture'\n      }, {\n        label: 'Account Planning [Management]',\n        value: 'Management'\n      }]\n    },\n    activityInfo: {\n      type: 'string',\n      uniforms: {\n        component: LongTextField\n      }\n    },\n    activityLocation: {\n      type: 'string',\n      options: [{\n        label: 'Virtual',\n        value: 'Virtual'\n      }, {\n        label: 'On Site',\n        value: 'On Site'\n      }]\n    }\n  },\n  required: ['accountID', 'accountName', 'activityType', 'activityLocation']\n};\nconst ajv = new Ajv({\n  allErrors: true,\n  useDefaults: true\n});\n\nfunction createValidator(schema) {\n  const validator = ajv.compile(schema);\n  return model => {\n    validator(model);\n\n    if (validator.errors && validator.errors.length) {\n      throw {\n        details: validator.errors\n      };\n    }\n  };\n}\n\nconst schemaValidator = createValidator(schema);\nconst bridge = new JSONSchemaBridge(schema, schemaValidator);\nexport default bridge;","map":{"version":3,"sources":["/Users/rjgleave/mysrc/oneq-work/sa-form/src/SaRequestSchema.js"],"names":["Ajv","JSONSchemaBridge","LongTextField","schema","title","type","properties","accountID","accountName","activityDate","format","activityType","options","label","value","activityInfo","uniforms","component","activityLocation","required","ajv","allErrors","useDefaults","createValidator","validator","compile","model","errors","length","details","schemaValidator","bridge"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,SAASC,gBAAT,QAAiC,6BAAjC,C,CAEA;;AACA,SAAQC,aAAR,QAA4B,mBAA5B;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,KAAK,EAAE,SADM;AAEbC,EAAAA,IAAI,EAAE,QAFO;AAGbC,EAAAA,UAAU,EAAE;AACVC,IAAAA,SAAS,EAAE;AAAEF,MAAAA,IAAI,EAAE;AAAR,KADD;AAEVG,IAAAA,WAAW,EAAE;AAAEH,MAAAA,IAAI,EAAE;AAAR,KAFH;AAGVI,IAAAA,YAAY,EAAE;AACZC,MAAAA,MAAM,EAAE,MADI;AAEZL,MAAAA,IAAI,EAAE;AAFM,KAHJ;AAOVM,IAAAA,YAAY,EAAE;AACZN,MAAAA,IAAI,EAAE,QADM;AAEZO,MAAAA,OAAO,EAAE,CACP;AACEC,QAAAA,KAAK,EAAE,qCADT;AAEEC,QAAAA,KAAK,EAAE;AAFT,OADO,EAKP;AACED,QAAAA,KAAK,EAAE,+BADT;AAEEC,QAAAA,KAAK,EAAE;AAFT,OALO,EASP;AACED,QAAAA,KAAK,EAAE,yCADT;AAEEC,QAAAA,KAAK,EAAE;AAFT,OATO,EAaP;AACED,QAAAA,KAAK,EAAE,oCADT;AAEEC,QAAAA,KAAK,EAAE;AAFT,OAbO,EAiBP;AACED,QAAAA,KAAK,EAAE,2BADT;AAEEC,QAAAA,KAAK,EAAE;AAFT,OAjBO,EAqBP;AACED,QAAAA,KAAK,EAAE,+CADT;AAEEC,QAAAA,KAAK,EAAE;AAFT,OArBO,EAyBP;AACED,QAAAA,KAAK,EAAE,+BADT;AAEEC,QAAAA,KAAK,EAAE;AAFT,OAzBO;AAFG,KAPJ;AAwCVC,IAAAA,YAAY,EAAE;AACZV,MAAAA,IAAI,EAAE,QADM;AAEZW,MAAAA,QAAQ,EAAE;AACRC,QAAAA,SAAS,EAAEf;AADH;AAFE,KAxCJ;AA8CVgB,IAAAA,gBAAgB,EAAE;AAChBb,MAAAA,IAAI,EAAE,QADU;AAEhBO,MAAAA,OAAO,EAAE,CACP;AACEC,QAAAA,KAAK,EAAE,SADT;AAEEC,QAAAA,KAAK,EAAE;AAFT,OADO,EAKP;AACED,QAAAA,KAAK,EAAE,SADT;AAEEC,QAAAA,KAAK,EAAE;AAFT,OALO;AAFO;AA9CR,GAHC;AA+DbK,EAAAA,QAAQ,EAAE,CAAC,WAAD,EAAc,aAAd,EAA4B,cAA5B,EAA2C,kBAA3C;AA/DG,CAAf;AAmEA,MAAMC,GAAG,GAAG,IAAIpB,GAAJ,CAAQ;AAAEqB,EAAAA,SAAS,EAAE,IAAb;AAAmBC,EAAAA,WAAW,EAAE;AAAhC,CAAR,CAAZ;;AAEA,SAASC,eAAT,CAAyBpB,MAAzB,EAAiC;AAC/B,QAAMqB,SAAS,GAAGJ,GAAG,CAACK,OAAJ,CAAYtB,MAAZ,CAAlB;AAEA,SAAOuB,KAAK,IAAI;AACdF,IAAAA,SAAS,CAACE,KAAD,CAAT;;AAEA,QAAIF,SAAS,CAACG,MAAV,IAAoBH,SAAS,CAACG,MAAV,CAAiBC,MAAzC,EAAiD;AAC/C,YAAM;AAAEC,QAAAA,OAAO,EAAEL,SAAS,CAACG;AAArB,OAAN;AACD;AACF,GAND;AAOD;;AAED,MAAMG,eAAe,GAAGP,eAAe,CAACpB,MAAD,CAAvC;AAEA,MAAM4B,MAAM,GAAG,IAAI9B,gBAAJ,CAAqBE,MAArB,EAA6B2B,eAA7B,CAAf;AAEA,eAAeC,MAAf","sourcesContent":["import Ajv from 'ajv';\nimport { JSONSchemaBridge } from 'uniforms-bridge-json-schema';\n\n// NOTE:  Uniforms tutorial omitted this line below, needed to compile\nimport {LongTextField} from 'uniforms-semantic';\n\nconst schema = {\n  title: 'Request',\n  type: 'object',\n  properties: {\n    accountID: { type: 'string' },\n    accountName: { type: 'string' },\n    activityDate: {\n      format: 'date',\n      type: 'string'\n    },\n    activityType: {\n      type: 'string',\n      options: [\n        {\n          label: 'Meeting / Office Hours [Management]',\n          value: 'Management'\n        },\n        {\n          label: 'Service Deep Dive [Workshops]',\n          value: 'Workshops'\n        },\n        {\n          label: 'AOD/SME/Specialist [Thought Leadership]',\n          value: 'Thought Leadership'\n        },\n        {\n          label: 'Architecture Review [Architecture]',\n          value: 'Architecture'\n        },\n        {\n          label: 'Immersion Day [Workshops]',\n          value: 'Workshops'\n        },\n        {\n          label: 'Migration Readiness Assessment [Architecture]',\n          value: 'Architecture'\n        },\n        {\n          label: 'Account Planning [Management]',\n          value: 'Management'\n        }\n      ]\n    },\n    activityInfo: {\n      type: 'string',\n      uniforms: {\n        component: LongTextField\n      },\n    },\n    activityLocation: {\n      type: 'string',\n      options: [\n        {\n          label: 'Virtual',\n          value: 'Virtual'\n        },\n        {\n          label: 'On Site',\n          value: 'On Site'\n        }\n      ]\n    },\n  },\n  required: ['accountID', 'accountName','activityType','activityLocation']\n};\n\n\nconst ajv = new Ajv({ allErrors: true, useDefaults: true });\n\nfunction createValidator(schema) {\n  const validator = ajv.compile(schema);\n\n  return model => {\n    validator(model);\n\n    if (validator.errors && validator.errors.length) {\n      throw { details: validator.errors };\n    }\n  };\n}\n\nconst schemaValidator = createValidator(schema);\n\nconst bridge = new JSONSchemaBridge(schema, schemaValidator);\n\nexport default bridge;"]},"metadata":{},"sourceType":"module"}