{"ast":null,"code":"import Ajv from 'ajv';\nimport { JSONSchemaBridge } from 'uniforms-bridge-json-schema'; // NOTE:  Uniforms tutorial omitted this line below, needed to compile\n\nimport { LongTextField, DateField } from 'uniforms-semantic';\nconst schema = {\n  title: 'Request',\n  type: 'object',\n  properties: {\n    accountLink: {\n      type: 'string'\n    },\n    accountName: {\n      type: 'string'\n    },\n    accountOpportunity: {\n      type: 'string'\n    },\n    activityTitle: {\n      type: 'string'\n    },\n    activityType: {\n      type: 'string',\n      options: [{\n        label: 'Meeting / Office Hours [Management]',\n        value: 'Support'\n      }, {\n        label: 'Service Deep Dive [Workshops]',\n        value: 'Service Discovery'\n      }, {\n        label: 'AOD/SME/Specialist [Thought Leadership]',\n        value: 'Thought Leadership'\n      }, {\n        label: 'Architecture Review [Architecture]',\n        value: 'Architecture'\n      }, {\n        label: 'Immersion Day [Workshops]',\n        value: 'Workshops'\n      }, {\n        label: 'Migration Readiness Assessment [Architecture]',\n        value: 'MRA'\n      }, {\n        label: 'Account Planning [Management]',\n        value: 'Management'\n      }]\n    },\n    activityTopic: {\n      type: 'string',\n      options: [{\n        label: 'Analytics',\n        value: 'Analytics'\n      }, {\n        label: 'Application Development',\n        value: 'Application Development'\n      }, {\n        label: 'Athena',\n        value: 'Athena'\n      }, {\n        label: 'Cloudendure Migration',\n        value: 'Cloudendure Migration'\n      }]\n    },\n    activityDomain: {\n      type: 'string',\n      options: [{\n        label: 'Blockchain',\n        value: 'Blockchain'\n      }, {\n        label: 'Compute/HPC',\n        value: 'Compute/HPC'\n      }, {\n        label: 'Containers',\n        value: 'Containers'\n      }]\n    },\n    activityComplexity: {\n      type: 'string',\n      options: [{\n        label: '100: Introductory and overview engagement.',\n        value: '100 Level'\n      }, {\n        label: '200: Intermediate engagement; requires specific details about the topic.',\n        value: '200 Level'\n      }, {\n        label: '300: Advanced material; requires in-depth understanding of features in a real-world environment',\n        value: '300 Level'\n      }, {\n        label: '400: Expert engagement; requires expert-to-expert interaction and coverage of specialized topics',\n        value: '400 Level'\n      }]\n    },\n    activityFromDate: {\n      label: 'Start Date',\n      type: Date,\n      optional: true\n    },\n    activityDetails: {\n      type: 'string',\n      uniforms: {\n        component: LongTextField\n      }\n    },\n    activityLocation: {\n      type: 'string'\n    },\n    activityInteractionType: {\n      type: 'string',\n      options: [{\n        label: 'Virtual meeting',\n        value: 'Virtual meeting'\n      }, {\n        label: 'On Site meeting',\n        value: 'On Site meeting'\n      }, {\n        label: 'email',\n        value: 'email'\n      }]\n    }\n  } //required: ['accountName','activityType','activityLocation']\n\n};\nconst ajv = new Ajv({\n  allErrors: true,\n  useDefaults: true\n});\n\nfunction createValidator(schema) {\n  const validator = ajv.compile(schema);\n  return model => {\n    validator(model);\n\n    if (validator.errors && validator.errors.length) {\n      throw {\n        details: validator.errors\n      };\n    }\n  };\n}\n\nconst schemaValidator = createValidator(schema);\nconst bridge = new JSONSchemaBridge(schema, schemaValidator);\nexport default bridge;","map":{"version":3,"sources":["/Users/rjgleave/mysrc/oneq-work/sa-form/src/SaRequestSchema.js"],"names":["Ajv","JSONSchemaBridge","LongTextField","DateField","schema","title","type","properties","accountLink","accountName","accountOpportunity","activityTitle","activityType","options","label","value","activityTopic","activityDomain","activityComplexity","activityFromDate","Date","optional","activityDetails","uniforms","component","activityLocation","activityInteractionType","ajv","allErrors","useDefaults","createValidator","validator","compile","model","errors","length","details","schemaValidator","bridge"],"mappings":"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","sourcesContent":["import Ajv from 'ajv';\nimport { JSONSchemaBridge } from 'uniforms-bridge-json-schema';\n\n// NOTE:  Uniforms tutorial omitted this line below, needed to compile\nimport {LongTextField, DateField} from 'uniforms-semantic';\n\nconst schema = {\n  title: 'Request',\n  type: 'object',\n  properties: {\n    accountLink: { type: 'string' },\n    accountName: { type: 'string' },\n    accountOpportunity: { type: 'string' },\n    activityTitle: { type: 'string' },\n    activityType: {\n      type: 'string',\n      options: [\n        {\n          label: 'Meeting / Office Hours [Management]',\n          value: 'Support'\n        },\n        {\n          label: 'Service Deep Dive [Workshops]',\n          value: 'Service Discovery'\n        },\n        {\n          label: 'AOD/SME/Specialist [Thought Leadership]',\n          value: 'Thought Leadership'\n        },\n        {\n          label: 'Architecture Review [Architecture]',\n          value: 'Architecture'\n        },\n        {\n          label: 'Immersion Day [Workshops]',\n          value: 'Workshops'\n        },\n        {\n          label: 'Migration Readiness Assessment [Architecture]',\n          value: 'MRA'\n        },\n        {\n          label: 'Account Planning [Management]',\n          value: 'Management'\n        }\n      ]\n    },\n    activityTopic: {\n      type: 'string',\n      options: [\n        {\n          label: 'Analytics',\n          value: 'Analytics'\n        },\n        {\n          label: 'Application Development',\n          value: 'Application Development'\n        },\n        {\n          label: 'Athena',\n          value: 'Athena'\n        },\n        {\n          label: 'Cloudendure Migration',\n          value: 'Cloudendure Migration'\n        }\n      ]\n    },\n    activityDomain: {\n      type: 'string',\n      options: [\n        {\n          label: 'Blockchain',\n          value: 'Blockchain'\n        },\n        {\n          label: 'Compute/HPC',\n          value: 'Compute/HPC'\n        },\n        {\n          label: 'Containers',\n          value: 'Containers'\n        }\n      ]\n    },\n    activityComplexity: {\n      type: 'string',\n      options: [\n        {\n          label: '100: Introductory and overview engagement.',\n          value: '100 Level'\n        },\n        {\n          label: '200: Intermediate engagement; requires specific details about the topic.',\n          value: '200 Level'\n        },\n        {\n          label: '300: Advanced material; requires in-depth understanding of features in a real-world environment',\n          value: '300 Level'\n        },\n        {\n          label: '400: Expert engagement; requires expert-to-expert interaction and coverage of specialized topics',\n          value: '400 Level'\n        } \n      ]\n    },\n    activityFromDate: {\n        label: 'Start Date',\n        type: Date,\n        optional: true\n      },\n    activityDetails: {\n      type: 'string',\n      uniforms: {\n        component: LongTextField\n      },\n    },\n    activityLocation: { type: 'string' },\n    activityInteractionType: {\n      type: 'string',\n      options: [\n        {\n          label: 'Virtual meeting',\n          value: 'Virtual meeting'\n        },\n        {\n          label: 'On Site meeting',\n          value: 'On Site meeting'\n        },\n        {\n          label: 'email',\n          value: 'email'\n        }\n      ]\n    },\n  },\n  //required: ['accountName','activityType','activityLocation']\n};\n\n\nconst ajv = new Ajv({ allErrors: true, useDefaults: true });\n\nfunction createValidator(schema) {\n  const validator = ajv.compile(schema);\n\n  return model => {\n    validator(model);\n\n    if (validator.errors && validator.errors.length) {\n      throw { details: validator.errors };\n    }\n  };\n}\n\nconst schemaValidator = createValidator(schema);\n\nconst bridge = new JSONSchemaBridge(schema, schemaValidator);\n\nexport default bridge;"]},"metadata":{},"sourceType":"module"}